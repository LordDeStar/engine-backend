version: '3.9'

networks:
  backend:
    driver: bridge
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  user-database:
    image: postgresql:latest
    container_name: user_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: users
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - users:/var/lib/postgresql/data/pgdata
    networks:
      - backend

  project-database:
    image: postgresql:latest
    container_name: projects_db
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: projects
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - projects:/var/lib/postgresql/data/pgdata
    networks:
      - backend

  user-service:
    container_name: user-service
    build:
      context: ./apps/users
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
      - user-database

  project-service:
    container_name: project-service
    build:
      context: ./apps/projetcs
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
      - project-database

  cdn-service:
    container_name: cdn
    build:
      context: ./apps/cdn-service
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
      - project-service
      - user-service

  rest-api:
    container_name: rest-api
    build:
      context: ./apps/rest_api
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - kafka
      - user-service
      - project-service
volumes:
  projects:
  users:
